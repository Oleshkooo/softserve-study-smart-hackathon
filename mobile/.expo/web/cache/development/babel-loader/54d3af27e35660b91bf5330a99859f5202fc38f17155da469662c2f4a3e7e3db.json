{"ast":null,"code":"import { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Home Screen\"\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return navigation.navigate('Other');\n      },\n      title: \"Go Other\"\n    })]\n  });\n};\nvar OtherScreen = function OtherScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsxs(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Other Screen\"\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return navigation.navigate('Home');\n      },\n      title: \"Go Home\"\n    })]\n  });\n};\nvar defaultScreenOptions = {\n  headerShown: false\n};\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Other\",\n        component: OtherScreen\n      })]\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","Button","Text","View","jsx","_jsx","jsxs","_jsxs","Stack","HomeScreen","_ref","navigation","style","display","alignItems","justifyContent","children","onPress","navigate","title","OtherScreen","_ref2","defaultScreenOptions","headerShown","App","Navigator","Screen","name","component","options"],"sources":["/Users/oleh/Desktop/softserve-study-smart-hackathon/mobile/App.js"],"sourcesContent":["import { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport { Button, Text, View } from 'react-native'\n\nconst Stack = createNativeStackNavigator()\n\nconst HomeScreen = ({ navigation }) => {\n    return (\n        <View\n            style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n            }}\n        >\n            <Text>Home Screen</Text>\n            <Button onPress={() => navigation.navigate('Other')} title=\"Go Other\" />\n        </View>\n    )\n}\n\nconst OtherScreen = ({ navigation }) => {\n    return (\n        <View\n            style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n            }}\n        >\n            <Text>Other Screen</Text>\n            <Button onPress={() => navigation.navigate('Home')} title=\"Go Home\" />\n        </View>\n    )\n}\n\nconst defaultScreenOptions = {\n    headerShown: false,\n}\n\nconst App = () => {\n    return (\n        <NavigationContainer>\n            <Stack.Navigator>\n                <Stack.Screen\n                    name=\"Home\"\n                    component={HomeScreen}\n                    options={{\n                        headerShown: false,\n                    }}\n                />\n                <Stack.Screen name=\"Other\" component={OtherScreen} />\n            </Stack.Navigator>\n        </NavigationContainer>\n    )\n}\n\nexport default App\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAAA,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG3E,IAAMC,KAAK,GAAGR,0BAA0B,EAAE;AAE1C,IAAMS,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC5B,OACIJ,KAAA,CAACJ,IAAI;IACDS,KAAK,EAAE;MACHC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE;IACpB,CAAE;IAAAC,QAAA,GAEFX,IAAA,CAACH,IAAI;MAAAc,QAAA,EAAC;IAAW,EAAO,EACxBX,IAAA,CAACJ,MAAM;MAACgB,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMN,UAAU,CAACO,QAAQ,CAAC,OAAO,CAAC;MAAA,CAAC;MAACC,KAAK,EAAC;IAAU,EAAG;EAAA,EACrE;AAEf,CAAC;AAED,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,KAAA,EAAuB;EAAA,IAAjBV,UAAU,GAAAU,KAAA,CAAVV,UAAU;EAC7B,OACIJ,KAAA,CAACJ,IAAI;IACDS,KAAK,EAAE;MACHC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE;IACpB,CAAE;IAAAC,QAAA,GAEFX,IAAA,CAACH,IAAI;MAAAc,QAAA,EAAC;IAAY,EAAO,EACzBX,IAAA,CAACJ,MAAM;MAACgB,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMN,UAAU,CAACO,QAAQ,CAAC,MAAM,CAAC;MAAA,CAAC;MAACC,KAAK,EAAC;IAAS,EAAG;EAAA,EACnE;AAEf,CAAC;AAED,IAAMG,oBAAoB,GAAG;EACzBC,WAAW,EAAE;AACjB,CAAC;AAED,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EACd,OACInB,IAAA,CAACN,mBAAmB;IAAAiB,QAAA,EAChBT,KAAA,CAACC,KAAK,CAACiB,SAAS;MAAAT,QAAA,GACZX,IAAA,CAACG,KAAK,CAACkB,MAAM;QACTC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAEnB,UAAW;QACtBoB,OAAO,EAAE;UACLN,WAAW,EAAE;QACjB;MAAE,EACJ,EACFlB,IAAA,CAACG,KAAK,CAACkB,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,SAAS,EAAER;MAAY,EAAG;IAAA;EACvC,EACA;AAE9B,CAAC;AAED,eAAeI,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}